# Internal variables.
PAPEROPT_a4	= -D latex_paper_size=a4
PAPEROPT_letter = -D latex_paper_size=letter
ALLSPHINXOPTS = -q -d $(BUILDDIR)/doctrees $(PAPEROPT_$(PAPER)) $(SPHINXOPTS) source

ifeq ($(UNAME), Linux)
SED_ARGS_FILE = -i -r
SED_ARGS_REGEX = -r
endif
ifeq ($(UNAME), Darwin)
SED_ARGS_FILE = -i "" -E
SED_ARGS_REGEX = -E
endif

# Makefile for Sphinx documentation
#

# You can set these variables from the command line.
SPHINXOPTS    = -c ./
SPHINXBUILD   = sphinx-build
PAPER	      =
BUILDDIR      = build

#
# Incremental Push and Publication System
#

SITESTAGE = ~/projects/output
STAGEDIR = $(subst projects,projects/output,$(CURDIR))

project-push:$(STAGEDIR)
	rsync -arz $(SITESTAGE)/ institute@foucault.cyborginstitute.net:/home/institute/public
project-stage:$(STAGEDIR)
	rsync -arz $(SITESTAGE)/ institute@foucault.cyborginstitute.net:/home/institute/staging
$(STAGEDIR):$(BUILDDIR)/publish
	@mkdir -p $@
	@echo [build]: created $@ directory
	@cp -R $</* $@
	@echo [build]: migragted $< to $@
	@touch $(CURDIR)/source/index.txt
	@echo [build]: touched file to ensure clean build

#
# PDF Build System
#

pdfs:$(subst .tex,.pdf,$(wildcard $(BUILDDIR)/latex/*.tex))

PDFLATEXCOMMAND = TEXINPUTS=".:$(BUILDDIR)/latex/:" pdflatex --interaction batchmode --output-directory $(BUILDDIR)/latex/

%.pdf:%.tex
	@echo [pdf]: pdf compilation of $@, started at `date`.
	@touch $(basename $@)-pdflatex.log
	@-$(PDFLATEXCOMMAND) $(LATEXOPTS) '$<' >> $(basename $@)-pdflatex.log
	@echo [pdf]: \(1/4\) pdflatex $<
	@-makeindex -s $(branch-output)/latex/python.ist '$(basename $<).idx' >> $(basename $@)-pdflatex.log 2>&1
	@echo [pdf]: \(2/4\) Indexing: $(basename $<).idx
	@$(PDFLATEXCOMMAND) $(LATEXOPTS) '$<' >> $(basename $@)-pdflatex.log
	@echo [pdf]: \(3/4\) pdflatex $<
	@$(PDFLATEXCOMMAND) $(LATEXOPTS) '$<' >> $(basename $@)-pdflatex.log
	@echo [pdf]: \(4/4\) pdflatex $<
	@echo [pdf]: see '$(basename $@)-pdflatex.log' for a full report of the pdf build process.
	@echo [pdf]: pdf compilation of $@, complete at `date`.

########################################################################

.PHONY:	 clean html dirhtml singlehtml epub latex text man publish

html:
	@echo [$@]: build starting at `date`.
	@mkdir -p $(BUILDDIR)/$@
	@echo [$@]: created $(BUILDDIR)/$@
	@echo [sphinx]: starting $@ build
	@$(SPHINXBUILD) -b $@ $(ALLSPHINXOPTS) $(BUILDDIR)/$@
	@echo "[$@] build complete."
	@echo [$@]: build complete at `date`.

dirhtml:
	@echo [$@]: build starting at `date`.
	@mkdir -p $(BUILDDIR)/$@
	@echo [$@]: created $(BUILDDIR)/$@
	@echo [sphinx]: starting $@ build
	@$(SPHINXBUILD) -b $@ $(ALLSPHINXOPTS) $(BUILDDIR)/$@
	@echo "[$@] build complete."
	@echo [$@]: build complete at `date`.

singlehtml:
	@echo [$@]: build starting at `date`.
	@mkdir -p $(BUILDDIR)/$@
	@echo [$@]: created $(BUILDDIR)/$@
	@echo [sphinx]: starting $@ build
	@$(SPHINXBUILD) -b $@ $(ALLSPHINXOPTS) $(BUILDDIR)/$@
	@echo "[$@] build complete."
	@echo [$@]: build complete at `date`.

epub-command = $(SPHINXBUILD) -b epub $(ALLSPHINXOPTS) $(BUILDDIR)/epub
epub-filter = sed -e $(SED_ARGS_REGEX) '/^WARNING: unknown mimetype.*ignoring$$/d' -e '/^WARNING: search index.*incomplete.$$/d'

epub:
	@echo [$@]: starting build at `date`.
	@mkdir -p $(BUILDDIR)/$@
	@echo [$@]: created $(BUILDDIR)/$@
	@echo [sphinx]: starting $@ build
	@{ $(epub-command) 2>&1 1>&3 | $(epub-filter) 1>&2; } 3>&1
	@echo [$@]: build complete at `date`.

latex:
	@echo [$@]: build starting at `date`.
	@mkdir -p $(BUILDDIR)/$@
	@echo [$@]: created $(BUILDDIR)/$@
	@echo [sphinx]: starting $@ build
	@$(SPHINXBUILD) -b $@ $(ALLSPHINXOPTS) $(BUILDDIR)/$@
	@echo "[$@] build complete."
	@echo [$@]: build complete at `date`.

text:
	@echo [$@]: build starting at `date`.
	@mkdir -p $(BUILDDIR)/$@
	@echo [$@]: created $(BUILDDIR)/$@
	@echo [sphinx]: starting $@ build
	@$(SPHINXBUILD) -b $@ $(ALLSPHINXOPTS) $(BUILDDIR)/$@
	@echo "[$@] build complete."
	@echo [$@]: build complete at `date`.

man:
	@echo [$@]: build starting at `date`.
	@mkdir -p $(BUILDDIR)/$@
	@echo [$@]: created $(BUILDDIR)/$@
	@echo [sphinx]: starting $@ build
	@$(SPHINXBUILD) -b $@ $(ALLSPHINXOPTS) $(BUILDDIR)/$@
	@echo "[$@] build complete."
	@echo [$@]: build complete at `date`.

linkcheck:
	@echo [$@]: build starting at `date`.
	@mkdir -p $(BUILDDIR)/$@
	@echo [$@]: created $(BUILDDIR)/$@
	@echo [sphinx]: starting $@ build
	@$(SPHINXBUILD) -b $@ $(ALLSPHINXOPTS) $(BUILDDIR)/$@
	@echo "[$@] build complete."
	@echo [$@]: build complete at `date`.
